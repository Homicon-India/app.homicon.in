/******/ (() => { // webpackBootstrap
/*!**************************************************!*\
  !*** ./resources/js/urban-company-animations.js ***!
  \**************************************************/
// JavaScript for Urban Company Style Animations and Interactions

document.addEventListener('DOMContentLoaded', function () {
  // ===== SMOOTH SCROLLING =====
  document.querySelectorAll('a[href^="#"]').forEach(function (anchor) {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      var target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });

  // ===== NAVBAR SCROLL EFFECT =====
  var navbar = document.querySelector('.navbar-urban, .navbar');
  if (navbar) {
    window.addEventListener('scroll', function () {
      if (window.scrollY > 50) {
        navbar.classList.add('scrolled');
      } else {
        navbar.classList.remove('scrolled');
      }
    });
  }

  // ===== SCROLL ANIMATIONS =====
  var observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };
  var observer = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        entry.target.classList.add('in-view');
      }
    });
  }, observerOptions);

  // Observe elements for scroll animations
  document.querySelectorAll('.scroll-animate').forEach(function (el) {
    observer.observe(el);
  });

  // ===== STAGGERED ANIMATIONS FOR GRIDS =====
  function animateGrid(gridSelector, itemSelector) {
    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
    var grid = document.querySelector(gridSelector);
    if (grid) {
      var items = grid.querySelectorAll(itemSelector);
      items.forEach(function (item, index) {
        item.style.animationDelay = "".concat(index * delay, "ms");
        item.classList.add('scroll-animate');
      });
    }
  }

  // Apply staggered animations
  animateGrid('.category-grid-urban', '.category-item');
  animateGrid('.service-grid', '.service-card');
  animateGrid('.testimonials-urban', '.testimonial-card');

  // ===== RIPPLE EFFECT =====
  function createRipple(e) {
    var button = e.currentTarget;
    var ripple = document.createElement('span');
    var rect = button.getBoundingClientRect();
    var size = Math.max(rect.width, rect.height);
    var x = e.clientX - rect.left - size / 2;
    var y = e.clientY - rect.top - size / 2;
    ripple.style.width = ripple.style.height = size + 'px';
    ripple.style.left = x + 'px';
    ripple.style.top = y + 'px';
    ripple.classList.add('ripple-effect');
    button.appendChild(ripple);
    setTimeout(function () {
      ripple.remove();
    }, 600);
  }

  // Add ripple effect to buttons
  document.querySelectorAll('.btn-urban-primary, .btn-urban-outline, .ripple').forEach(function (btn) {
    btn.addEventListener('click', createRipple);
  });

  // ===== LOADING ANIMATION =====
  function showLoading(element) {
    element.innerHTML = '<span class="loading-spinner"></span> Loading...';
    element.disabled = true;
  }
  function hideLoading(element, originalText) {
    element.innerHTML = originalText;
    element.disabled = false;
  }

  // ===== SEARCH FUNCTIONALITY WITH ANIMATION =====
  var searchForm = document.querySelector('.hero-search, .search-form');
  if (searchForm) {
    var searchInput = searchForm.querySelector('.form-control');
    var searchBtn = searchForm.querySelector('.search-btn, .btn');
    if (searchInput && searchBtn) {
      searchForm.addEventListener('submit', function (e) {
        e.preventDefault();
        var originalText = searchBtn.innerHTML;
        showLoading(searchBtn);

        // Simulate search delay
        setTimeout(function () {
          hideLoading(searchBtn, originalText);
          // Add your search logic here
        }, 2000);
      });

      // Search input focus animation
      searchInput.addEventListener('focus', function () {
        this.parentElement.style.transform = 'scale(1.02)';
        this.parentElement.style.boxShadow = '0 12px 40px rgba(0, 0, 0, 0.15)';
      });
      searchInput.addEventListener('blur', function () {
        this.parentElement.style.transform = 'scale(1)';
        this.parentElement.style.boxShadow = '0 8px 32px rgba(0, 0, 0, 0.1)';
      });
    }
  }

  // ===== CARD HOVER EFFECTS =====
  document.querySelectorAll('.service-card, .category-item, .testimonial-card').forEach(function (card) {
    card.addEventListener('mouseenter', function () {
      this.style.transform = 'translateY(-10px) scale(1.02)';
    });
    card.addEventListener('mouseleave', function () {
      this.style.transform = 'translateY(0) scale(1)';
    });
  });

  // ===== COUNTER ANIMATION =====
  function animateCounter(element, start, end, duration) {
    var startTimestamp = null;
    var _step = function step(timestamp) {
      if (!startTimestamp) startTimestamp = timestamp;
      var progress = Math.min((timestamp - startTimestamp) / duration, 1);
      var current = Math.floor(progress * (end - start) + start);
      element.textContent = current.toLocaleString();
      if (progress < 1) {
        window.requestAnimationFrame(_step);
      }
    };
    window.requestAnimationFrame(_step);
  }

  // Animate counters when they come into view
  var counterObserver = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        var counter = entry.target;
        var endValue = parseInt(counter.getAttribute('data-count') || counter.textContent.replace(/,/g, ''));
        animateCounter(counter, 0, endValue, 2000);
        counterObserver.unobserve(counter);
      }
    });
  }, {
    threshold: 0.5
  });
  document.querySelectorAll('.stats-number').forEach(function (counter) {
    counterObserver.observe(counter);
  });

  // ===== FORM VALIDATION WITH ANIMATIONS =====
  document.querySelectorAll('.form-control').forEach(function (input) {
    input.addEventListener('invalid', function (e) {
      var _this = this;
      e.preventDefault();
      this.classList.add('shake');
      this.style.borderColor = '#dc3545';
      setTimeout(function () {
        _this.classList.remove('shake');
      }, 500);
    });
    input.addEventListener('input', function () {
      if (this.validity.valid) {
        this.style.borderColor = '#28a745';
      } else {
        this.style.borderColor = '#dc3545';
      }
    });
  });

  // ===== MODAL ANIMATIONS =====
  document.querySelectorAll('[data-bs-toggle="modal"]').forEach(function (trigger) {
    trigger.addEventListener('click', function () {
      var modalId = this.getAttribute('data-bs-target');
      var modal = document.querySelector(modalId);
      if (modal) {
        modal.querySelector('.modal-dialog').style.transform = 'scale(0.7) translateY(-100px)';
        modal.querySelector('.modal-dialog').style.opacity = '0';
        setTimeout(function () {
          modal.querySelector('.modal-dialog').style.transform = 'scale(1) translateY(0)';
          modal.querySelector('.modal-dialog').style.opacity = '1';
        }, 150);
      }
    });
  });

  // ===== LAZY LOADING IMAGES =====
  var imageObserver = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        var img = entry.target;
        if (img.dataset.src) {
          img.src = img.dataset.src;
          img.classList.remove('loading-skeleton');
          img.classList.add('fade-in');
          imageObserver.unobserve(img);
        }
      }
    });
  }, {
    threshold: 0.1
  });
  document.querySelectorAll('img[data-src]').forEach(function (img) {
    img.classList.add('loading-skeleton');
    imageObserver.observe(img);
  });

  // ===== DROPDOWN ANIMATIONS =====
  document.querySelectorAll('.dropdown-toggle').forEach(function (toggle) {
    toggle.addEventListener('click', function () {
      var menu = this.nextElementSibling;
      if (menu && menu.classList.contains('dropdown-menu')) {
        menu.style.opacity = '0';
        menu.style.transform = 'translateY(-10px)';
        setTimeout(function () {
          menu.style.opacity = '1';
          menu.style.transform = 'translateY(0)';
        }, 10);
      }
    });
  });

  // ===== PARALLAX EFFECT =====
  window.addEventListener('scroll', function () {
    var scrolled = window.pageYOffset;
    var parallaxElements = document.querySelectorAll('.parallax');
    parallaxElements.forEach(function (element) {
      var speed = element.getAttribute('data-speed') || 0.5;
      var yPos = -(scrolled * speed);
      element.style.transform = "translateY(".concat(yPos, "px)");
    });
  });

  // ===== FLOATING BUTTON =====
  function createFloatingButton() {
    var floatingBtn = document.createElement('button');
    floatingBtn.innerHTML = '<i class="fas fa-arrow-up"></i>';
    floatingBtn.className = 'btn-floating btn-urban-primary';
    floatingBtn.style.display = 'none';
    document.body.appendChild(floatingBtn);
    window.addEventListener('scroll', function () {
      if (window.scrollY > 300) {
        floatingBtn.style.display = 'flex';
      } else {
        floatingBtn.style.display = 'none';
      }
    });
    floatingBtn.addEventListener('click', function () {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    });
  }
  createFloatingButton();

  // ===== TYPEWRITER EFFECT =====
  function typeWriter(element, text) {
    var speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
    var i = 0;
    element.innerHTML = '';
    function type() {
      if (i < text.length) {
        element.innerHTML += text.charAt(i);
        i++;
        setTimeout(type, speed);
      }
    }
    type();
  }

  // Apply typewriter effect to specific elements
  document.querySelectorAll('.typewriter').forEach(function (element) {
    var text = element.textContent;
    var observer = new IntersectionObserver(function (entries) {
      entries.forEach(function (entry) {
        if (entry.isIntersecting) {
          typeWriter(element, text);
          observer.unobserve(element);
        }
      });
    }, {
      threshold: 0.5
    });
    observer.observe(element);
  });

  // ===== MOBILE MENU ANIMATION =====
  var mobileToggle = document.querySelector('.navbar-toggler');
  if (mobileToggle) {
    mobileToggle.addEventListener('click', function () {
      var navbarCollapse = document.querySelector('.navbar-collapse');
      if (navbarCollapse) {
        navbarCollapse.style.transition = 'all 0.3s ease';
      }
    });
  }

  // ===== PAGE TRANSITION EFFECT =====
  function pageTransition() {
    document.body.style.opacity = '0';
    document.body.style.transition = 'opacity 0.3s ease';
    setTimeout(function () {
      document.body.style.opacity = '1';
    }, 100);
  }

  // Apply page transition on load
  pageTransition();

  // ===== CUSTOM CURSOR (Optional) =====
  function createCustomCursor() {
    var cursor = document.createElement('div');
    cursor.className = 'custom-cursor';
    cursor.style.cssText = "\n            position: fixed;\n            width: 20px;\n            height: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            border-radius: 50%;\n            pointer-events: none;\n            z-index: 9999;\n            transition: transform 0.1s ease;\n            display: none;\n        ";
    document.body.appendChild(cursor);
    document.addEventListener('mousemove', function (e) {
      cursor.style.left = e.clientX - 10 + 'px';
      cursor.style.top = e.clientY - 10 + 'px';
      cursor.style.display = 'block';
    });
    document.addEventListener('mouseenter', function () {
      cursor.style.display = 'block';
    });
    document.addEventListener('mouseleave', function () {
      cursor.style.display = 'none';
    });

    // Scale cursor on hover over interactive elements
    document.querySelectorAll('a, button, .btn, input, textarea').forEach(function (element) {
      element.addEventListener('mouseenter', function () {
        cursor.style.transform = 'scale(1.5)';
        cursor.style.background = 'rgba(0, 0, 0, 0.6)';
      });
      element.addEventListener('mouseleave', function () {
        cursor.style.transform = 'scale(1)';
        cursor.style.background = 'rgba(0, 0, 0, 0.8)';
      });
    });
  }

  // Uncomment to enable custom cursor
  // createCustomCursor();
});

// ===== CSS ANIMATIONS ADDED VIA JAVASCRIPT =====
var style = document.createElement('style');
style.textContent = "\n    .ripple-effect {\n        position: absolute !important;\n        border-radius: 50%;\n        background: rgba(255, 255, 255, 0.6);\n        animation: ripple-animation 0.6s linear;\n        pointer-events: none;\n    }\n\n    @keyframes ripple-animation {\n        to {\n            transform: scale(4);\n            opacity: 0;\n        }\n    }\n\n    .fade-in {\n        animation: fadeIn 0.5s ease;\n    }\n\n    @keyframes fadeIn {\n        from { opacity: 0; }\n        to { opacity: 1; }\n    }\n\n    .shake {\n        animation: shake 0.5s ease;\n    }\n\n    .in-view {\n        opacity: 1 !important;\n        transform: translateY(0) !important;\n    }\n\n    .scroll-animate {\n        opacity: 0;\n        transform: translateY(30px);\n        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    @media (prefers-reduced-motion: reduce) {\n        .scroll-animate {\n            opacity: 1 !important;\n            transform: none !important;\n        }\n    }\n";
document.head.appendChild(style);
/******/ })()
;